{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMvSvt5HD0Mc4zEE/NZoL59"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Ejercicios del Curso de Kaggle - Renaming and Combining - Hugo Peralta Muñoz"],"metadata":{"id":"ZX015BvixxSI"}},{"cell_type":"markdown","source":["Importar dependencias."],"metadata":{"id":"LCTY78UEyF-9"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"tmyAoAiUxwHD","executionInfo":{"status":"ok","timestamp":1729682808606,"user_tz":-120,"elapsed":1245,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}}},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"markdown","source":["Cargar el dataframe de películas."],"metadata":{"id":"OcDX1BnGyJWx"}},{"cell_type":"code","source":["df = pd.read_csv(\"/content/peliculas.csv\")\n","df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u0KIWXKtyL7k","executionInfo":{"status":"ok","timestamp":1729682808607,"user_tz":-120,"elapsed":17,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"5a3da9dc-61a7-410f-d53e-ee97c698f45f"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['id', 'title', 'year', 'synopsis', 'critic_score', 'people_score',\n","       'consensus', 'total_reviews', 'total_ratings', 'type', 'rating',\n","       'genre', 'original_language', 'director', 'producer', 'writer',\n","       'release_date_(theaters)', 'release_date_(streaming)',\n","       'box_office_(gross_usa)', 'runtime', 'production_co', 'sound_mix',\n","       'aspect_ratio', 'view_the_collection', 'crew', 'link'],\n","      dtype='object')"]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["### 1. Crea un DataFrame movies con las columnas `id`, `title`, `year`, y `genre`, y luego cambia el nombre de la columna `year` a `release_year`."],"metadata":{"id":"RYbzoLd7yPe0"}},{"cell_type":"code","source":["movies = df[[\"id\", \"title\", \"year\", \"genre\"]]\n","movies = movies.rename(columns={\"year\": \"release_year\"})\n","movies[\"release_year\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"gzeXB26AyftB","executionInfo":{"status":"ok","timestamp":1729682808607,"user_tz":-120,"elapsed":15,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"83c48177-3f31-48ad-f7de-057a445a0659"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       2018\n","1       2019\n","2       2018\n","3       2015\n","4       2018\n","        ... \n","1605    2011\n","1606    2006\n","1607    2001\n","1608    2010\n","1609    2001\n","Name: release_year, Length: 1610, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>release_year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2018</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2019</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2018</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2015</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2018</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1605</th>\n","      <td>2011</td>\n","    </tr>\n","    <tr>\n","      <th>1606</th>\n","      <td>2006</td>\n","    </tr>\n","    <tr>\n","      <th>1607</th>\n","      <td>2001</td>\n","    </tr>\n","    <tr>\n","      <th>1608</th>\n","      <td>2010</td>\n","    </tr>\n","    <tr>\n","      <th>1609</th>\n","      <td>2001</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1610 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["### 2. Concatena verticalmente dos DataFrames `movies_1` y `movies_2`, ambos con las mismas columnas: `id`, `title`, `genre`."],"metadata":{"id":"H-ZAMb8VygAA"}},{"cell_type":"code","source":["movies_1 = df[[\"id\", \"title\", \"genre\"]]\n","movies_2 = df[[\"id\", \"title\", \"genre\"]]\n","\n","# Concatenar verticalmente\n","pd.concat([movies_1, movies_2], axis=0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"EMPc3d0Ly0K-","executionInfo":{"status":"ok","timestamp":1729682808607,"user_tz":-120,"elapsed":14,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"82f13b67-9e68-4a24-a215-fa8a5e51cd4a"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        id                              title  \\\n","0        0                      Black Panther   \n","1        1                  Avengers: Endgame   \n","2        2     Mission: Impossible -- Fallout   \n","3        3                 Mad Max: Fury Road   \n","4        4  Spider-Man: Into the Spider-Verse   \n","...    ...                                ...   \n","1605  1605                             Priest   \n","1606  1606                     September Dawn   \n","1607  1607                   American Outlaws   \n","1608  1608                          Jonah Hex   \n","1609  1609                      Texas Rangers   \n","\n","                                                  genre  \n","0                            adventure, action, fantasy  \n","1                    sci fi, adventure, action, fantasy  \n","2               action, mystery and thriller, adventure  \n","3                                     adventure, action  \n","4     action, adventure, fantasy, comedy, kids and f...  \n","...                                                 ...  \n","1605                            horror, action, fantasy  \n","1606                            drama, history, western  \n","1607                                    western, action  \n","1608  mystery and thriller, fantasy, action, western...  \n","1609                                 western, adventure  \n","\n","[3220 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-8e671c84-8f64-4df6-a258-3fa612692d5b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>title</th>\n","      <th>genre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Black Panther</td>\n","      <td>adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Avengers: Endgame</td>\n","      <td>sci fi, adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Mission: Impossible -- Fallout</td>\n","      <td>action, mystery and thriller, adventure</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Mad Max: Fury Road</td>\n","      <td>adventure, action</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Spider-Man: Into the Spider-Verse</td>\n","      <td>action, adventure, fantasy, comedy, kids and f...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1605</th>\n","      <td>1605</td>\n","      <td>Priest</td>\n","      <td>horror, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1606</th>\n","      <td>1606</td>\n","      <td>September Dawn</td>\n","      <td>drama, history, western</td>\n","    </tr>\n","    <tr>\n","      <th>1607</th>\n","      <td>1607</td>\n","      <td>American Outlaws</td>\n","      <td>western, action</td>\n","    </tr>\n","    <tr>\n","      <th>1608</th>\n","      <td>1608</td>\n","      <td>Jonah Hex</td>\n","      <td>mystery and thriller, fantasy, action, western...</td>\n","    </tr>\n","    <tr>\n","      <th>1609</th>\n","      <td>1609</td>\n","      <td>Texas Rangers</td>\n","      <td>western, adventure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3220 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e671c84-8f64-4df6-a258-3fa612692d5b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8e671c84-8f64-4df6-a258-3fa612692d5b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8e671c84-8f64-4df6-a258-3fa612692d5b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-737456a9-c017-4111-859a-dc3c5757588e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-737456a9-c017-4111-859a-dc3c5757588e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-737456a9-c017-4111-859a-dc3c5757588e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 3220,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464,\n        \"min\": 0,\n        \"max\": 1609,\n        \"num_unique_values\": 1610,\n        \"samples\": [\n          29,\n          99,\n          678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 982,\n        \"samples\": [\n          \"The Damned United\",\n          \"Last Days in Vietnam\",\n          \"Jiminy Glick in Lalawood\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 266,\n        \"samples\": [\n          \"drama, biography\",\n          \"gay and lesbian, drama\",\n          \"drama, comedy, adventure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["### 3. Usando el DataFrame movies creado en el ejercicio 1, establece `id` como el índice de un nuevo DataFrame llamado `movies_index_id`."],"metadata":{"id":"tAZikdzVy0dd"}},{"cell_type":"code","source":["movies_index_id = movies.set_index(\"id\")\n","movies_index_id"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"ii2QaITCy66B","executionInfo":{"status":"ok","timestamp":1729682808607,"user_tz":-120,"elapsed":13,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"c91b9e20-b6bb-41b3-bbbc-1d5dd4f9c29d"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                  title  release_year  \\\n","id                                                      \n","0                         Black Panther          2018   \n","1                     Avengers: Endgame          2019   \n","2        Mission: Impossible -- Fallout          2018   \n","3                    Mad Max: Fury Road          2015   \n","4     Spider-Man: Into the Spider-Verse          2018   \n","...                                 ...           ...   \n","1605                             Priest          2011   \n","1606                     September Dawn          2006   \n","1607                   American Outlaws          2001   \n","1608                          Jonah Hex          2010   \n","1609                      Texas Rangers          2001   \n","\n","                                                  genre  \n","id                                                       \n","0                            adventure, action, fantasy  \n","1                    sci fi, adventure, action, fantasy  \n","2               action, mystery and thriller, adventure  \n","3                                     adventure, action  \n","4     action, adventure, fantasy, comedy, kids and f...  \n","...                                                 ...  \n","1605                            horror, action, fantasy  \n","1606                            drama, history, western  \n","1607                                    western, action  \n","1608  mystery and thriller, fantasy, action, western...  \n","1609                                 western, adventure  \n","\n","[1610 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-a56823a0-dd7a-4803-bd2c-241dbe1eabd0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>release_year</th>\n","      <th>genre</th>\n","    </tr>\n","    <tr>\n","      <th>id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Black Panther</td>\n","      <td>2018</td>\n","      <td>adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Avengers: Endgame</td>\n","      <td>2019</td>\n","      <td>sci fi, adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mission: Impossible -- Fallout</td>\n","      <td>2018</td>\n","      <td>action, mystery and thriller, adventure</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mad Max: Fury Road</td>\n","      <td>2015</td>\n","      <td>adventure, action</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Spider-Man: Into the Spider-Verse</td>\n","      <td>2018</td>\n","      <td>action, adventure, fantasy, comedy, kids and f...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1605</th>\n","      <td>Priest</td>\n","      <td>2011</td>\n","      <td>horror, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1606</th>\n","      <td>September Dawn</td>\n","      <td>2006</td>\n","      <td>drama, history, western</td>\n","    </tr>\n","    <tr>\n","      <th>1607</th>\n","      <td>American Outlaws</td>\n","      <td>2001</td>\n","      <td>western, action</td>\n","    </tr>\n","    <tr>\n","      <th>1608</th>\n","      <td>Jonah Hex</td>\n","      <td>2010</td>\n","      <td>mystery and thriller, fantasy, action, western...</td>\n","    </tr>\n","    <tr>\n","      <th>1609</th>\n","      <td>Texas Rangers</td>\n","      <td>2001</td>\n","      <td>western, adventure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1610 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a56823a0-dd7a-4803-bd2c-241dbe1eabd0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a56823a0-dd7a-4803-bd2c-241dbe1eabd0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a56823a0-dd7a-4803-bd2c-241dbe1eabd0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-168f1d86-7d5a-4f13-9765-670d81f197de\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-168f1d86-7d5a-4f13-9765-670d81f197de')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-168f1d86-7d5a-4f13-9765-670d81f197de button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_cc900494-2ca4-4ee1-8dbf-ddb93e63a68a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('movies_index_id')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cc900494-2ca4-4ee1-8dbf-ddb93e63a68a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('movies_index_id');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"movies_index_id","summary":"{\n  \"name\": \"movies_index_id\",\n  \"rows\": 1610,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464,\n        \"min\": 0,\n        \"max\": 1609,\n        \"num_unique_values\": 1610,\n        \"samples\": [\n          29,\n          99,\n          678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 982,\n        \"samples\": [\n          \"The Damned United\",\n          \"Last Days in Vietnam\",\n          \"Jiminy Glick in Lalawood\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"release_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 1919,\n        \"max\": 2020,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          1955,\n          1989,\n          1981\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 266,\n        \"samples\": [\n          \"drama, biography\",\n          \"gay and lesbian, drama\",\n          \"drama, comedy, adventure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["### 4. Crea un DataFrame `reviews` y únelo al DataFrame `movies` (creado en el ejercicio 1), utilizando `id` como índice en ambos."],"metadata":{"id":"ho1ZhOzBy7Jq"}},{"cell_type":"code","source":["reviews = df[[\"id\", \"total_reviews\"]]\n","\n","movies.set_index(\"id\").join(reviews.set_index(\"id\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"Kxt3aOf8zB0U","executionInfo":{"status":"ok","timestamp":1729682808607,"user_tz":-120,"elapsed":12,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"ac1f7ff5-8b3a-4a3b-e83e-2a6861c58586"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                  title  release_year  \\\n","id                                                      \n","0                         Black Panther          2018   \n","1                     Avengers: Endgame          2019   \n","2        Mission: Impossible -- Fallout          2018   \n","3                    Mad Max: Fury Road          2015   \n","4     Spider-Man: Into the Spider-Verse          2018   \n","...                                 ...           ...   \n","1605                             Priest          2011   \n","1606                     September Dawn          2006   \n","1607                   American Outlaws          2001   \n","1608                          Jonah Hex          2010   \n","1609                      Texas Rangers          2001   \n","\n","                                                  genre  total_reviews  \n","id                                                                      \n","0                            adventure, action, fantasy            519  \n","1                    sci fi, adventure, action, fantasy            538  \n","2               action, mystery and thriller, adventure            433  \n","3                                     adventure, action            427  \n","4     action, adventure, fantasy, comedy, kids and f...            387  \n","...                                                 ...            ...  \n","1605                            horror, action, fantasy            101  \n","1606                            drama, history, western             55  \n","1607                                    western, action            103  \n","1608  mystery and thriller, fantasy, action, western...            152  \n","1609                                 western, adventure             51  \n","\n","[1610 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-b430d8b3-2305-4a76-9567-0daf5bdf7e17\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>release_year</th>\n","      <th>genre</th>\n","      <th>total_reviews</th>\n","    </tr>\n","    <tr>\n","      <th>id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Black Panther</td>\n","      <td>2018</td>\n","      <td>adventure, action, fantasy</td>\n","      <td>519</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Avengers: Endgame</td>\n","      <td>2019</td>\n","      <td>sci fi, adventure, action, fantasy</td>\n","      <td>538</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mission: Impossible -- Fallout</td>\n","      <td>2018</td>\n","      <td>action, mystery and thriller, adventure</td>\n","      <td>433</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mad Max: Fury Road</td>\n","      <td>2015</td>\n","      <td>adventure, action</td>\n","      <td>427</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Spider-Man: Into the Spider-Verse</td>\n","      <td>2018</td>\n","      <td>action, adventure, fantasy, comedy, kids and f...</td>\n","      <td>387</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1605</th>\n","      <td>Priest</td>\n","      <td>2011</td>\n","      <td>horror, action, fantasy</td>\n","      <td>101</td>\n","    </tr>\n","    <tr>\n","      <th>1606</th>\n","      <td>September Dawn</td>\n","      <td>2006</td>\n","      <td>drama, history, western</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>1607</th>\n","      <td>American Outlaws</td>\n","      <td>2001</td>\n","      <td>western, action</td>\n","      <td>103</td>\n","    </tr>\n","    <tr>\n","      <th>1608</th>\n","      <td>Jonah Hex</td>\n","      <td>2010</td>\n","      <td>mystery and thriller, fantasy, action, western...</td>\n","      <td>152</td>\n","    </tr>\n","    <tr>\n","      <th>1609</th>\n","      <td>Texas Rangers</td>\n","      <td>2001</td>\n","      <td>western, adventure</td>\n","      <td>51</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1610 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b430d8b3-2305-4a76-9567-0daf5bdf7e17')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b430d8b3-2305-4a76-9567-0daf5bdf7e17 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b430d8b3-2305-4a76-9567-0daf5bdf7e17');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fdcf1918-914c-44bb-a56d-69b878ad1f67\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdcf1918-914c-44bb-a56d-69b878ad1f67')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fdcf1918-914c-44bb-a56d-69b878ad1f67 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"movies\",\n  \"rows\": 1610,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464,\n        \"min\": 0,\n        \"max\": 1609,\n        \"num_unique_values\": 1610,\n        \"samples\": [\n          29,\n          99,\n          678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 982,\n        \"samples\": [\n          \"The Damned United\",\n          \"Last Days in Vietnam\",\n          \"Jiminy Glick in Lalawood\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"release_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 1919,\n        \"max\": 2020,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          1955,\n          1989,\n          1981\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 266,\n        \"samples\": [\n          \"drama, biography\",\n          \"gay and lesbian, drama\",\n          \"drama, comedy, adventure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 118,\n        \"min\": 39,\n        \"max\": 561,\n        \"num_unique_values\": 296,\n        \"samples\": [\n          399,\n          80,\n          130\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["### 5. Renombra el eje de las filas del DataFrame `movies` a `movies_index`."],"metadata":{"id":"b6XKdSfVzCFh"}},{"cell_type":"code","source":["movies.rename_axis(\"movies_index\", axis=\"rows\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"Ohlo6x5zzKWt","executionInfo":{"status":"ok","timestamp":1729682808924,"user_tz":-120,"elapsed":329,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"fec1b3e2-700b-42ee-b514-6d90d6a26b71"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                id                              title  release_year  \\\n","movies_index                                                          \n","0                0                      Black Panther          2018   \n","1                1                  Avengers: Endgame          2019   \n","2                2     Mission: Impossible -- Fallout          2018   \n","3                3                 Mad Max: Fury Road          2015   \n","4                4  Spider-Man: Into the Spider-Verse          2018   \n","...            ...                                ...           ...   \n","1605          1605                             Priest          2011   \n","1606          1606                     September Dawn          2006   \n","1607          1607                   American Outlaws          2001   \n","1608          1608                          Jonah Hex          2010   \n","1609          1609                      Texas Rangers          2001   \n","\n","                                                          genre  \n","movies_index                                                     \n","0                                    adventure, action, fantasy  \n","1                            sci fi, adventure, action, fantasy  \n","2                       action, mystery and thriller, adventure  \n","3                                             adventure, action  \n","4             action, adventure, fantasy, comedy, kids and f...  \n","...                                                         ...  \n","1605                                    horror, action, fantasy  \n","1606                                    drama, history, western  \n","1607                                            western, action  \n","1608          mystery and thriller, fantasy, action, western...  \n","1609                                         western, adventure  \n","\n","[1610 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-e383cfd0-02dd-413e-9515-ded3aa3345b2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>title</th>\n","      <th>release_year</th>\n","      <th>genre</th>\n","    </tr>\n","    <tr>\n","      <th>movies_index</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Black Panther</td>\n","      <td>2018</td>\n","      <td>adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Avengers: Endgame</td>\n","      <td>2019</td>\n","      <td>sci fi, adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Mission: Impossible -- Fallout</td>\n","      <td>2018</td>\n","      <td>action, mystery and thriller, adventure</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Mad Max: Fury Road</td>\n","      <td>2015</td>\n","      <td>adventure, action</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Spider-Man: Into the Spider-Verse</td>\n","      <td>2018</td>\n","      <td>action, adventure, fantasy, comedy, kids and f...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1605</th>\n","      <td>1605</td>\n","      <td>Priest</td>\n","      <td>2011</td>\n","      <td>horror, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1606</th>\n","      <td>1606</td>\n","      <td>September Dawn</td>\n","      <td>2006</td>\n","      <td>drama, history, western</td>\n","    </tr>\n","    <tr>\n","      <th>1607</th>\n","      <td>1607</td>\n","      <td>American Outlaws</td>\n","      <td>2001</td>\n","      <td>western, action</td>\n","    </tr>\n","    <tr>\n","      <th>1608</th>\n","      <td>1608</td>\n","      <td>Jonah Hex</td>\n","      <td>2010</td>\n","      <td>mystery and thriller, fantasy, action, western...</td>\n","    </tr>\n","    <tr>\n","      <th>1609</th>\n","      <td>1609</td>\n","      <td>Texas Rangers</td>\n","      <td>2001</td>\n","      <td>western, adventure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1610 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e383cfd0-02dd-413e-9515-ded3aa3345b2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e383cfd0-02dd-413e-9515-ded3aa3345b2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e383cfd0-02dd-413e-9515-ded3aa3345b2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-12cdb6ff-5eb4-47d0-9d52-d13b9ddae0ff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-12cdb6ff-5eb4-47d0-9d52-d13b9ddae0ff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-12cdb6ff-5eb4-47d0-9d52-d13b9ddae0ff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"movies\",\n  \"rows\": 1610,\n  \"fields\": [\n    {\n      \"column\": \"movies_index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464,\n        \"min\": 0,\n        \"max\": 1609,\n        \"num_unique_values\": 1610,\n        \"samples\": [\n          29,\n          99,\n          678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464,\n        \"min\": 0,\n        \"max\": 1609,\n        \"num_unique_values\": 1610,\n        \"samples\": [\n          29,\n          99,\n          678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 982,\n        \"samples\": [\n          \"The Damned United\",\n          \"Last Days in Vietnam\",\n          \"Jiminy Glick in Lalawood\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"release_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 1919,\n        \"max\": 2020,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          1955,\n          1989,\n          1981\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 266,\n        \"samples\": [\n          \"drama, biography\",\n          \"gay and lesbian, drama\",\n          \"drama, comedy, adventure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["### 6. Crea un DataFrame `directors` y únelo al DataFrame `movies` por el índice `id`."],"metadata":{"id":"y5AHBSPazKxy"}},{"cell_type":"code","source":["directors = df[[\"id\", \"director\"]]\n","movies.join(directors.set_index(\"id\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":475},"id":"3hRfF5LjzQpu","executionInfo":{"status":"ok","timestamp":1729682808924,"user_tz":-120,"elapsed":17,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"49fc6e40-8040-469d-d4fc-92923f007d9d"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        id                              title  release_year  \\\n","0        0                      Black Panther          2018   \n","1        1                  Avengers: Endgame          2019   \n","2        2     Mission: Impossible -- Fallout          2018   \n","3        3                 Mad Max: Fury Road          2015   \n","4        4  Spider-Man: Into the Spider-Verse          2018   \n","...    ...                                ...           ...   \n","1605  1605                             Priest          2011   \n","1606  1606                     September Dawn          2006   \n","1607  1607                   American Outlaws          2001   \n","1608  1608                          Jonah Hex          2010   \n","1609  1609                      Texas Rangers          2001   \n","\n","                                                  genre  \\\n","0                            adventure, action, fantasy   \n","1                    sci fi, adventure, action, fantasy   \n","2               action, mystery and thriller, adventure   \n","3                                     adventure, action   \n","4     action, adventure, fantasy, comedy, kids and f...   \n","...                                                 ...   \n","1605                            horror, action, fantasy   \n","1606                            drama, history, western   \n","1607                                    western, action   \n","1608  mystery and thriller, fantasy, action, western...   \n","1609                                 western, adventure   \n","\n","                                           director  \n","0                                      Ryan Coogler  \n","1                          Anthony Russo, Joe Russo  \n","2                             Christopher McQuarrie  \n","3                                     George Miller  \n","4     Bob Persichetti, Peter Ramsey, Rodney Rothman  \n","...                                             ...  \n","1605                                  Scott Stewart  \n","1606                               Christopher Cain  \n","1607                                   Les Mayfield  \n","1608                                  Jimmy Hayward  \n","1609                                    Steve Miner  \n","\n","[1610 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-2e670632-09f1-42d3-98cc-d486d3fb4e97\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>title</th>\n","      <th>release_year</th>\n","      <th>genre</th>\n","      <th>director</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Black Panther</td>\n","      <td>2018</td>\n","      <td>adventure, action, fantasy</td>\n","      <td>Ryan Coogler</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Avengers: Endgame</td>\n","      <td>2019</td>\n","      <td>sci fi, adventure, action, fantasy</td>\n","      <td>Anthony Russo, Joe Russo</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Mission: Impossible -- Fallout</td>\n","      <td>2018</td>\n","      <td>action, mystery and thriller, adventure</td>\n","      <td>Christopher McQuarrie</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Mad Max: Fury Road</td>\n","      <td>2015</td>\n","      <td>adventure, action</td>\n","      <td>George Miller</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Spider-Man: Into the Spider-Verse</td>\n","      <td>2018</td>\n","      <td>action, adventure, fantasy, comedy, kids and f...</td>\n","      <td>Bob Persichetti, Peter Ramsey, Rodney Rothman</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1605</th>\n","      <td>1605</td>\n","      <td>Priest</td>\n","      <td>2011</td>\n","      <td>horror, action, fantasy</td>\n","      <td>Scott Stewart</td>\n","    </tr>\n","    <tr>\n","      <th>1606</th>\n","      <td>1606</td>\n","      <td>September Dawn</td>\n","      <td>2006</td>\n","      <td>drama, history, western</td>\n","      <td>Christopher Cain</td>\n","    </tr>\n","    <tr>\n","      <th>1607</th>\n","      <td>1607</td>\n","      <td>American Outlaws</td>\n","      <td>2001</td>\n","      <td>western, action</td>\n","      <td>Les Mayfield</td>\n","    </tr>\n","    <tr>\n","      <th>1608</th>\n","      <td>1608</td>\n","      <td>Jonah Hex</td>\n","      <td>2010</td>\n","      <td>mystery and thriller, fantasy, action, western...</td>\n","      <td>Jimmy Hayward</td>\n","    </tr>\n","    <tr>\n","      <th>1609</th>\n","      <td>1609</td>\n","      <td>Texas Rangers</td>\n","      <td>2001</td>\n","      <td>western, adventure</td>\n","      <td>Steve Miner</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1610 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e670632-09f1-42d3-98cc-d486d3fb4e97')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2e670632-09f1-42d3-98cc-d486d3fb4e97 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2e670632-09f1-42d3-98cc-d486d3fb4e97');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-753f4cbe-3f09-426f-ae9f-c46b22660996\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-753f4cbe-3f09-426f-ae9f-c46b22660996')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-753f4cbe-3f09-426f-ae9f-c46b22660996 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"movies\",\n  \"rows\": 1610,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464,\n        \"min\": 0,\n        \"max\": 1609,\n        \"num_unique_values\": 1610,\n        \"samples\": [\n          29,\n          99,\n          678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 982,\n        \"samples\": [\n          \"The Damned United\",\n          \"Last Days in Vietnam\",\n          \"Jiminy Glick in Lalawood\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"release_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 1919,\n        \"max\": 2020,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          1955,\n          1989,\n          1981\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 266,\n        \"samples\": [\n          \"drama, biography\",\n          \"gay and lesbian, drama\",\n          \"drama, comedy, adventure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 761,\n        \"samples\": [\n          \"Debra Granik\",\n          \"Alex Holmes\",\n          \"Hayao Miyazaki, Kirk Wise\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["### 7. Concatena horizontalmente dos DataFrames `movies_info` y `box_office`, ambos indexados por `id`."],"metadata":{"id":"FdPtPytKzRA5"}},{"cell_type":"code","source":["movies_info = df[[\"id\", \"title\", \"synopsis\"]]\n","box_office = df[[\"id\", \"box_office_(gross_usa)\"]]\n","\n","pd.concat([movies_info.set_index(\"id\"), box_office.set_index(\"id\")], axis=1)"],"metadata":{"id":"kIMRa3f6zXS0","colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1729682808924,"user_tz":-120,"elapsed":16,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"80775d47-6340-487c-8e82-bd073dd6291f"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                  title  \\\n","id                                        \n","0                         Black Panther   \n","1                     Avengers: Endgame   \n","2        Mission: Impossible -- Fallout   \n","3                    Mad Max: Fury Road   \n","4     Spider-Man: Into the Spider-Verse   \n","...                                 ...   \n","1605                             Priest   \n","1606                     September Dawn   \n","1607                   American Outlaws   \n","1608                          Jonah Hex   \n","1609                      Texas Rangers   \n","\n","                                               synopsis box_office_(gross_usa)  \n","id                                                                              \n","0     After the death of his father, T'Challa return...                $700.2M  \n","1     Adrift in space with no food or water, Tony St...                $858.4M  \n","2     Ethan Hunt and the IMF team join forces with C...                $220.1M  \n","3     Years after the collapse of civilization, the ...                $153.6M  \n","4     Bitten by a radioactive spider in the subway, ...                $190.2M  \n","...                                                 ...                    ...  \n","1605  In a society ravaged by centuries of war betwe...                 $29.1M  \n","1606  In 1857 Capt. Alexander Fancher leads a wagon ...                  $1.1M  \n","1607  After the Civil War ends, Confederate soldiers...                 $13.3M  \n","1608  Having cheated death, gunslinger and bounty hu...                 $10.5M  \n","1609  Texas, 1875. In a land without justice, where ...                $623.4K  \n","\n","[1610 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-12bbcd4f-b767-4a77-b750-a6606f2ba8de\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>synopsis</th>\n","      <th>box_office_(gross_usa)</th>\n","    </tr>\n","    <tr>\n","      <th>id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Black Panther</td>\n","      <td>After the death of his father, T'Challa return...</td>\n","      <td>$700.2M</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Avengers: Endgame</td>\n","      <td>Adrift in space with no food or water, Tony St...</td>\n","      <td>$858.4M</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mission: Impossible -- Fallout</td>\n","      <td>Ethan Hunt and the IMF team join forces with C...</td>\n","      <td>$220.1M</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mad Max: Fury Road</td>\n","      <td>Years after the collapse of civilization, the ...</td>\n","      <td>$153.6M</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Spider-Man: Into the Spider-Verse</td>\n","      <td>Bitten by a radioactive spider in the subway, ...</td>\n","      <td>$190.2M</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1605</th>\n","      <td>Priest</td>\n","      <td>In a society ravaged by centuries of war betwe...</td>\n","      <td>$29.1M</td>\n","    </tr>\n","    <tr>\n","      <th>1606</th>\n","      <td>September Dawn</td>\n","      <td>In 1857 Capt. Alexander Fancher leads a wagon ...</td>\n","      <td>$1.1M</td>\n","    </tr>\n","    <tr>\n","      <th>1607</th>\n","      <td>American Outlaws</td>\n","      <td>After the Civil War ends, Confederate soldiers...</td>\n","      <td>$13.3M</td>\n","    </tr>\n","    <tr>\n","      <th>1608</th>\n","      <td>Jonah Hex</td>\n","      <td>Having cheated death, gunslinger and bounty hu...</td>\n","      <td>$10.5M</td>\n","    </tr>\n","    <tr>\n","      <th>1609</th>\n","      <td>Texas Rangers</td>\n","      <td>Texas, 1875. In a land without justice, where ...</td>\n","      <td>$623.4K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1610 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-12bbcd4f-b767-4a77-b750-a6606f2ba8de')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-12bbcd4f-b767-4a77-b750-a6606f2ba8de button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-12bbcd4f-b767-4a77-b750-a6606f2ba8de');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-419ca390-0b68-4e7d-99a1-7c1d307d0d7d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-419ca390-0b68-4e7d-99a1-7c1d307d0d7d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-419ca390-0b68-4e7d-99a1-7c1d307d0d7d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 1610,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464,\n        \"min\": 0,\n        \"max\": 1609,\n        \"num_unique_values\": 1610,\n        \"samples\": [\n          29,\n          99,\n          678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 982,\n        \"samples\": [\n          \"The Damned United\",\n          \"Last Days in Vietnam\",\n          \"Jiminy Glick in Lalawood\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"synopsis\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 988,\n        \"samples\": [\n          \"Mr. Watanabe suddenly finds that he has terminal cancer. He vows to make his final days meaningful. His attempts to communicate his anguish to his son and daughter-in-law lead only to heartbreak. Finally, inspired by an unselfish co-worker, he turns his efforts to bringing happiness to others by building a playground in a dreary slum neighborhood. When the park is finally completed, he is able to face death with peaceful acceptance.\",\n          \"In New York, piano player Al Roberts (Tom Neal) laments when his singer girlfriend, Sue Harvey (Claudia Drake), leaves for Hollywood, Calif. When Al gets some money, he decides to hitchhike to California to join Sue. In Arizona, Al accepts a ride with Charles Haskell (Edmund MacDonald), but during a storm in a freak accident, Haskell is killed. Frightened, Al assumes Haskell's identity and car, but soon comes upon the mysterious Vera (Ann Savage), who seems to know all about his true identity.\",\n          \"It's the summer of 1983, and precocious 17-year-old Elio Perlman is spending the days with his family at their 17th-century villa in Lombardy, Italy. He soon meets Oliver, a handsome doctoral student who's working as an intern for Elio's father. Amid the sun-drenched splendor of their surroundings, Elio and Oliver discover the heady beauty of awakening desire over the course of a summer that will alter their lives forever.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"box_office_(gross_usa)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 580,\n        \"samples\": [\n          \"$113.8M\",\n          \"$77.4M\",\n          \"$75.3M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["### 8. Cambia el nombre del eje de las columnas en el DataFrame `movies` a `movie_attributes`."],"metadata":{"id":"e-LBgnFdzXlB"}},{"cell_type":"code","source":["movies.rename_axis(\"movie_attributes\", axis=\"columns\")"],"metadata":{"id":"g4pGmaiOzcFx","colab":{"base_uri":"https://localhost:8080/","height":441},"executionInfo":{"status":"ok","timestamp":1729682808925,"user_tz":-120,"elapsed":16,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"e7061aae-f4a7-48a6-b0c3-5e28a23d6f02"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["movie_attributes    id                              title  release_year  \\\n","0                    0                      Black Panther          2018   \n","1                    1                  Avengers: Endgame          2019   \n","2                    2     Mission: Impossible -- Fallout          2018   \n","3                    3                 Mad Max: Fury Road          2015   \n","4                    4  Spider-Man: Into the Spider-Verse          2018   \n","...                ...                                ...           ...   \n","1605              1605                             Priest          2011   \n","1606              1606                     September Dawn          2006   \n","1607              1607                   American Outlaws          2001   \n","1608              1608                          Jonah Hex          2010   \n","1609              1609                      Texas Rangers          2001   \n","\n","movie_attributes                                              genre  \n","0                                        adventure, action, fantasy  \n","1                                sci fi, adventure, action, fantasy  \n","2                           action, mystery and thriller, adventure  \n","3                                                 adventure, action  \n","4                 action, adventure, fantasy, comedy, kids and f...  \n","...                                                             ...  \n","1605                                        horror, action, fantasy  \n","1606                                        drama, history, western  \n","1607                                                western, action  \n","1608              mystery and thriller, fantasy, action, western...  \n","1609                                             western, adventure  \n","\n","[1610 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-5b96b156-67c9-4878-bd30-fae84f525493\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>movie_attributes</th>\n","      <th>id</th>\n","      <th>title</th>\n","      <th>release_year</th>\n","      <th>genre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Black Panther</td>\n","      <td>2018</td>\n","      <td>adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Avengers: Endgame</td>\n","      <td>2019</td>\n","      <td>sci fi, adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Mission: Impossible -- Fallout</td>\n","      <td>2018</td>\n","      <td>action, mystery and thriller, adventure</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Mad Max: Fury Road</td>\n","      <td>2015</td>\n","      <td>adventure, action</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Spider-Man: Into the Spider-Verse</td>\n","      <td>2018</td>\n","      <td>action, adventure, fantasy, comedy, kids and f...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1605</th>\n","      <td>1605</td>\n","      <td>Priest</td>\n","      <td>2011</td>\n","      <td>horror, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1606</th>\n","      <td>1606</td>\n","      <td>September Dawn</td>\n","      <td>2006</td>\n","      <td>drama, history, western</td>\n","    </tr>\n","    <tr>\n","      <th>1607</th>\n","      <td>1607</td>\n","      <td>American Outlaws</td>\n","      <td>2001</td>\n","      <td>western, action</td>\n","    </tr>\n","    <tr>\n","      <th>1608</th>\n","      <td>1608</td>\n","      <td>Jonah Hex</td>\n","      <td>2010</td>\n","      <td>mystery and thriller, fantasy, action, western...</td>\n","    </tr>\n","    <tr>\n","      <th>1609</th>\n","      <td>1609</td>\n","      <td>Texas Rangers</td>\n","      <td>2001</td>\n","      <td>western, adventure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1610 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b96b156-67c9-4878-bd30-fae84f525493')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5b96b156-67c9-4878-bd30-fae84f525493 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5b96b156-67c9-4878-bd30-fae84f525493');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-464fe2bc-2528-4d1b-a831-68799210f907\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-464fe2bc-2528-4d1b-a831-68799210f907')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-464fe2bc-2528-4d1b-a831-68799210f907 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"movies\",\n  \"rows\": 1610,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464,\n        \"min\": 0,\n        \"max\": 1609,\n        \"num_unique_values\": 1610,\n        \"samples\": [\n          29,\n          99,\n          678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 982,\n        \"samples\": [\n          \"The Damned United\",\n          \"Last Days in Vietnam\",\n          \"Jiminy Glick in Lalawood\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"release_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 1919,\n        \"max\": 2020,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          1955,\n          1989,\n          1981\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 266,\n        \"samples\": [\n          \"drama, biography\",\n          \"gay and lesbian, drama\",\n          \"drama, comedy, adventure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["### 9. Crea un DataFrame `genres` y concaténalo verticalmente con el DataFrame `movies`."],"metadata":{"id":"U-Ne07_xzcZA"}},{"cell_type":"code","source":["genres_df = df[\"genre\"]\n","\n","pd.concat([movies.set_index(\"id\"), genres_df])"],"metadata":{"id":"Yy3ZMdWdziAA","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1729682808925,"user_tz":-120,"elapsed":15,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"6f8b63d4-fbf9-4891-ae7e-fd9d4338103a"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                  title  release_year  \\\n","0                         Black Panther        2018.0   \n","1                     Avengers: Endgame        2019.0   \n","2        Mission: Impossible -- Fallout        2018.0   \n","3                    Mad Max: Fury Road        2015.0   \n","4     Spider-Man: Into the Spider-Verse        2018.0   \n","...                                 ...           ...   \n","1605                                NaN           NaN   \n","1606                                NaN           NaN   \n","1607                                NaN           NaN   \n","1608                                NaN           NaN   \n","1609                                NaN           NaN   \n","\n","                                                  genre  \n","0                            adventure, action, fantasy  \n","1                    sci fi, adventure, action, fantasy  \n","2               action, mystery and thriller, adventure  \n","3                                     adventure, action  \n","4     action, adventure, fantasy, comedy, kids and f...  \n","...                                                 ...  \n","1605                            horror, action, fantasy  \n","1606                            drama, history, western  \n","1607                                    western, action  \n","1608  mystery and thriller, fantasy, action, western...  \n","1609                                 western, adventure  \n","\n","[3220 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-8ebb6d9e-c650-4f63-8c80-d32a202b4149\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>release_year</th>\n","      <th>genre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Black Panther</td>\n","      <td>2018.0</td>\n","      <td>adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Avengers: Endgame</td>\n","      <td>2019.0</td>\n","      <td>sci fi, adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mission: Impossible -- Fallout</td>\n","      <td>2018.0</td>\n","      <td>action, mystery and thriller, adventure</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Mad Max: Fury Road</td>\n","      <td>2015.0</td>\n","      <td>adventure, action</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Spider-Man: Into the Spider-Verse</td>\n","      <td>2018.0</td>\n","      <td>action, adventure, fantasy, comedy, kids and f...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1605</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>horror, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1606</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>drama, history, western</td>\n","    </tr>\n","    <tr>\n","      <th>1607</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>western, action</td>\n","    </tr>\n","    <tr>\n","      <th>1608</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>mystery and thriller, fantasy, action, western...</td>\n","    </tr>\n","    <tr>\n","      <th>1609</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>western, adventure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3220 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ebb6d9e-c650-4f63-8c80-d32a202b4149')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8ebb6d9e-c650-4f63-8c80-d32a202b4149 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8ebb6d9e-c650-4f63-8c80-d32a202b4149');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1c8a011b-f3f4-476e-96c7-5805b84652f4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1c8a011b-f3f4-476e-96c7-5805b84652f4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1c8a011b-f3f4-476e-96c7-5805b84652f4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 3220,\n  \"fields\": [\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 982,\n        \"samples\": [\n          \"The Damned United\",\n          \"Last Days in Vietnam\",\n          \"Jiminy Glick in Lalawood\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"release_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.0541195298747,\n        \"min\": 1919.0,\n        \"max\": 2020.0,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          1955.0,\n          1989.0,\n          1981.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 266,\n        \"samples\": [\n          \"drama, biography\",\n          \"gay and lesbian, drama\",\n          \"drama, comedy, adventure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["### 10.\tRenombra las columnas del DataFrame movies para que `title` sea `movie_title` y `year` sea `release_year`."],"metadata":{"id":"qDYgmik3zigi"}},{"cell_type":"code","source":["movies.rename(columns={\"title\": \"movie_title\", \"year\": \"release_year\"})"],"metadata":{"id":"FP29e0_DzqMn","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1729682808925,"user_tz":-120,"elapsed":14,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"30237933-abf9-42ac-db9e-7bd7ba47f50d"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        id                        movie_title  release_year  \\\n","0        0                      Black Panther          2018   \n","1        1                  Avengers: Endgame          2019   \n","2        2     Mission: Impossible -- Fallout          2018   \n","3        3                 Mad Max: Fury Road          2015   \n","4        4  Spider-Man: Into the Spider-Verse          2018   \n","...    ...                                ...           ...   \n","1605  1605                             Priest          2011   \n","1606  1606                     September Dawn          2006   \n","1607  1607                   American Outlaws          2001   \n","1608  1608                          Jonah Hex          2010   \n","1609  1609                      Texas Rangers          2001   \n","\n","                                                  genre  \n","0                            adventure, action, fantasy  \n","1                    sci fi, adventure, action, fantasy  \n","2               action, mystery and thriller, adventure  \n","3                                     adventure, action  \n","4     action, adventure, fantasy, comedy, kids and f...  \n","...                                                 ...  \n","1605                            horror, action, fantasy  \n","1606                            drama, history, western  \n","1607                                    western, action  \n","1608  mystery and thriller, fantasy, action, western...  \n","1609                                 western, adventure  \n","\n","[1610 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-4db113b2-c142-46d4-a73f-afe2033d5db5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>movie_title</th>\n","      <th>release_year</th>\n","      <th>genre</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Black Panther</td>\n","      <td>2018</td>\n","      <td>adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Avengers: Endgame</td>\n","      <td>2019</td>\n","      <td>sci fi, adventure, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Mission: Impossible -- Fallout</td>\n","      <td>2018</td>\n","      <td>action, mystery and thriller, adventure</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Mad Max: Fury Road</td>\n","      <td>2015</td>\n","      <td>adventure, action</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Spider-Man: Into the Spider-Verse</td>\n","      <td>2018</td>\n","      <td>action, adventure, fantasy, comedy, kids and f...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1605</th>\n","      <td>1605</td>\n","      <td>Priest</td>\n","      <td>2011</td>\n","      <td>horror, action, fantasy</td>\n","    </tr>\n","    <tr>\n","      <th>1606</th>\n","      <td>1606</td>\n","      <td>September Dawn</td>\n","      <td>2006</td>\n","      <td>drama, history, western</td>\n","    </tr>\n","    <tr>\n","      <th>1607</th>\n","      <td>1607</td>\n","      <td>American Outlaws</td>\n","      <td>2001</td>\n","      <td>western, action</td>\n","    </tr>\n","    <tr>\n","      <th>1608</th>\n","      <td>1608</td>\n","      <td>Jonah Hex</td>\n","      <td>2010</td>\n","      <td>mystery and thriller, fantasy, action, western...</td>\n","    </tr>\n","    <tr>\n","      <th>1609</th>\n","      <td>1609</td>\n","      <td>Texas Rangers</td>\n","      <td>2001</td>\n","      <td>western, adventure</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1610 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4db113b2-c142-46d4-a73f-afe2033d5db5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4db113b2-c142-46d4-a73f-afe2033d5db5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4db113b2-c142-46d4-a73f-afe2033d5db5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eba214e7-211a-434c-806f-333fcd425d75\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eba214e7-211a-434c-806f-333fcd425d75')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eba214e7-211a-434c-806f-333fcd425d75 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"movies\",\n  \"rows\": 1610,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464,\n        \"min\": 0,\n        \"max\": 1609,\n        \"num_unique_values\": 1610,\n        \"samples\": [\n          29,\n          99,\n          678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"movie_title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 982,\n        \"samples\": [\n          \"The Damned United\",\n          \"Last Days in Vietnam\",\n          \"Jiminy Glick in Lalawood\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"release_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 1919,\n        \"max\": 2020,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          1955,\n          1989,\n          1981\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 266,\n        \"samples\": [\n          \"drama, biography\",\n          \"gay and lesbian, drama\",\n          \"drama, comedy, adventure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]}]}