{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOTplB5KWtJSDXOK6bucQeY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["NumPy Array (21-30) - Hugo Peralta Muñoz"],"metadata":{"id":"bdMR4cz5jW5N"}},{"cell_type":"markdown","source":["Importar dependencias"],"metadata":{"id":"1B1SnJsNjlRk"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"Vihs801PjQl0","executionInfo":{"status":"ok","timestamp":1729585606293,"user_tz":-120,"elapsed":403,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}}},"outputs":[],"source":["import numpy as np"]},{"cell_type":"markdown","source":["### 21. Write a NumPy program to find the set exclusive-or of two arrays. Set exclusive-or will return sorted, distinct values in only one (not both) of the input arrays.\n","`array1 = [ 0 10 20 40 60 80]`\n","\n","`array2 = [10, 30, 40, 50, 70]`\n","\n","Unique values that are in only one (not both) of the input arrays:\n","`[ 0 20 30 50 60 70 80]`\n"],"metadata":{"id":"4MIQL5epjo7u"}},{"cell_type":"code","source":["array1 = np.array([0, 10, 20, 40, 60, 80])\n","array2 = np.array([10, 30, 40, 50, 70])\n","\n","np.setxor1d(array1, array2)"],"metadata":{"id":"jjrzzIHfkVbz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729585930798,"user_tz":-120,"elapsed":336,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"16161b50-fc29-4ffc-c743-7b6aa7fd891f"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0, 20, 30, 50, 60, 70, 80])"]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["### 22. Write a NumPy program to find the union of two arrays. Union will return a unique, sorted array of values in each of the two input arrays.\n","`array1 = [ 0 10 20 40 60 80]`\n","\n","`array2 = [10, 30, 40, 50, 70]`\n","\n","Unique sorted array of values that are in either of the two input arrays:\n","`[ 0 10 20 30 40 50 60 70 80]`\n"],"metadata":{"id":"pl1NxPffkXea"}},{"cell_type":"code","source":["array1 = np.array([0, 10, 20, 40, 60, 80])\n","array2 = np.array([10, 30, 40, 50, 70])\n","\n","np.union1d(array1, array2)"],"metadata":{"id":"lqGT3P3Pkn-2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729585977130,"user_tz":-120,"elapsed":296,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"d667d323-e1f7-4845-a197-3f93da961426"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0, 10, 20, 30, 40, 50, 60, 70, 80])"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["### 23. Write a NumPy program to test whether all elements in an array evaluate to True.\n","**Note: 0 evaluates to False in NumPy**"],"metadata":{"id":"XtYMEAiJkoWx"}},{"cell_type":"code","source":["test_array = np.array([1, 2, 3, 4, 5])\n","\n","np.all(test_array)"],"metadata":{"id":"Nnl4rmgskxM6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729586071539,"user_tz":-120,"elapsed":382,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"bdaad344-7387-4250-d01c-c0744b9b894c"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["### 24. Write a NumPy program to test whether any array element along a given axis evaluates to True.\n","**Note: 0 evaluates to False in NumPy.**\n"],"metadata":{"id":"AyQXKBmDkxmS"}},{"cell_type":"code","source":["test_array = np.array([\n","                       [1, 2, 0, 4, 5],\n","                       [6, 7, 0, 9, 8]\n","                       ])\n","\n","print(np.any(test_array, axis=0)) # Array evaluando por columnas\n","print(np.any(test_array, axis=1)) # Array evaluando por filas"],"metadata":{"id":"tHVqtZrhk5aP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729586261622,"user_tz":-120,"elapsed":308,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"ba0089cb-8b6e-47cf-bd0e-c93168824029"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["[ True  True False  True  True]\n","[ True  True]\n"]}]},{"cell_type":"markdown","source":["### 25. Write a NumPy program to construct an array by repeating.\n","Sample array: `[1, 2, 3, 4]`\n","\n","Expected Output:\n","- Original array\n","`[1, 2, 3, 4]`\n","\n","- Repeating 2 times\n","`[1 2 3 4 1 2 3 4]`\n","\n","- Repeating 3 times\n","`[1 2 3 4 1 2 3 4 1 2 3 4]`"],"metadata":{"id":"6sJtzWoMk6Dk"}},{"cell_type":"code","source":["original_array = np.array([1, 2, 3, 4])\n","\n","print(original_array)\n","print(np.tile(original_array, 2))\n","print(np.tile(original_array, 3))"],"metadata":{"id":"TiHimegDlRwG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729586372359,"user_tz":-120,"elapsed":333,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"5254f9ac-0fa2-427f-fcd4-13382dc79142"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4]\n","[1 2 3 4 1 2 3 4]\n","[1 2 3 4 1 2 3 4 1 2 3 4]\n"]}]},{"cell_type":"markdown","source":["### 26. Write a NumPy program to repeat array elements.\n","Sample array: `[1, 2, 3, 4]`\n","\n","Expected Output:\n","\n","`[1 1 2 2 3 3 4 4]`"],"metadata":{"id":"ZZO7IWYxlStb"}},{"cell_type":"code","source":["original_array = np.array([1, 2, 3, 4])\n","\n","print(original_array)\n","print(np.repeat(original_array, 2))"],"metadata":{"id":"nEr3fZkhlc9a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729586538268,"user_tz":-120,"elapsed":327,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"30f03432-ab6c-4ee8-c43a-55e818359849"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["[1 2 3 4]\n","[1 1 2 2 3 3 4 4]\n"]}]},{"cell_type":"markdown","source":["### 27. Write a NumPy program to find the indices of the maximum and minimum values along the given axis of an array.\n","Original array: `[1 2 3 4 5 6]`\n","\n","Maximum Values: 5\n","\n","Minimum Values: 0"],"metadata":{"id":"DAtVu2xLld3s"}},{"cell_type":"code","source":["original_array = np.array([1, 2, 3, 4, 5, 6]) # Va desde los indices 0 - 5, ya que contiene 6 elementos\n","\n","print(np.argmax(original_array))\n","print(np.argmin(original_array))"],"metadata":{"id":"CEoPS6YElnN5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729586613425,"user_tz":-120,"elapsed":318,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"eb5b56ca-9811-4d58-a561-3439002d84f5"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","0\n"]}]},{"cell_type":"markdown","source":["### 28. Write a NumPy program to compare two arrays using NumPy.\n","Array a: `[1 2]`\n","\n","Array b: `[4 5]`\n","\n","a > b\n","\n","`[False False]`\n","\n","a >= b\n","\n","`[False False]`\n","\n","a < b\n","\n","`[ True True]`\n","\n","a <= b\n","\n","`[ True True]`"],"metadata":{"id":"2j8cGqAyloJg"}},{"cell_type":"code","source":["array_a = [1, 2]\n","array_b = [4, 5]\n","\n","print(np.greater(array_a, array_b))\n","print(np.greater_equal(array_a, array_b))\n","print(np.less(array_a, array_b))\n","print(np.less_equal(array_a, array_b))"],"metadata":{"id":"i6pPZ-SGmDCS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729586664207,"user_tz":-120,"elapsed":320,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"b587278a-ca9c-420e-eeaa-416887a148d3"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["[False False]\n","[False False]\n","[ True  True]\n","[ True  True]\n"]}]},{"cell_type":"markdown","source":["### 29. Write a NumPy program to sort along the first and last axes of an array.\n","Sample array: `[[2,5],[4,4]]`\n","\n","Expected Output:\n","- Original array:`\n","[[4 6]\n","[2 1]]`\n","- Sort along the first axis:`\n","[[2 1]\n","[4 6]]`\n","- Sort along the last axis:`\n","[[1 2]\n","[4 6]]`"],"metadata":{"id":"KXDjSH1KmDi-"}},{"cell_type":"code","source":["original_array = np.array([[4, 6], [2, 1]])\n","\n","print(original_array, end=\"\\n\\n\")\n","print(np.sort(original_array, axis=0)) # First axis, filas\n","print()\n","print(np.sort(original_array, axis=1)) # Last axis, columnas"],"metadata":{"id":"ws1leGv7mX30","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729586743292,"user_tz":-120,"elapsed":418,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"8ab12826-d4e6-49a1-8c4a-6de3e11f407d"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["[[4 6]\n"," [2 1]]\n","\n","[[2 1]\n"," [4 6]]\n","\n","[[4 6]\n"," [1 2]]\n"]}]},{"cell_type":"markdown","source":["### 30. Write a NumPy program to sort pairs of a first name and a last name and return their indices (first by last name, then by first name).\n","`first_names = (Betsey, Shelley, Lanell, Genesis, Margery)`\n","\n","`last_names = (Battle, Brien, Plotner, Stahl, Woolum)`\n","\n","Expected Output:\n","`[0 3 2 4 1]`"],"metadata":{"id":"rRZSY8XjmYRa"}},{"cell_type":"code","source":["first_names = ('Betsey', 'Shelley', 'Lanell', 'Genesis', 'Margery')\n","last_names = ('Battle', 'Brien', 'Plotner', 'Stahl', 'Woolum')\n","\n","np.lexsort((last_names, first_names))"],"metadata":{"id":"Cz0rLd7qmkix","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729586849657,"user_tz":-120,"elapsed":360,"user":{"displayName":"Hugo Peralta Muñoz","userId":"00397476948593499523"}},"outputId":"8991cd8d-96c7-479d-fecb-62831c7fafee"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 3, 2, 4, 1])"]},"metadata":{},"execution_count":19}]}]}